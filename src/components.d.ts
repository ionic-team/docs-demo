/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppHome {
    }
    interface AppRoot {
    }
    interface Component_template_ {
    }
    interface ComponentAccordion {
    }
    interface ComponentActionSheet {
    }
    interface ComponentAlert {
    }
    interface ComponentAvatar {
    }
    interface ComponentBadge {
    }
    interface ComponentBreadcrumbs {
    }
    interface ComponentButton {
    }
    interface ComponentCard {
    }
    interface ComponentCheckbox {
    }
    interface ComponentChip {
    }
    interface ComponentContent {
    }
    interface ComponentDatetime {
    }
    interface ComponentDetails {
        "description": string;
        "url": string;
    }
    interface ComponentFab {
    }
    interface ComponentGrid {
    }
    interface ComponentIcons {
    }
    interface ComponentInfiniteScroll {
    }
    interface ComponentInput {
    }
    interface ComponentItem {
    }
    interface ComponentItemGroup {
    }
    interface ComponentList {
    }
    interface ComponentLoading {
    }
    interface ComponentMenu {
    }
    interface ComponentModal {
    }
    interface ComponentModalContent {
    }
    interface ComponentNav {
    }
    interface ComponentNote {
    }
    interface ComponentPicker {
    }
    interface ComponentPopover {
    }
    interface ComponentProgress {
    }
    interface ComponentRadio {
    }
    interface ComponentRange {
    }
    interface ComponentRefresher {
    }
    interface ComponentReorder {
    }
    interface ComponentSearchbar {
    }
    interface ComponentSegment {
    }
    interface ComponentSelect {
    }
    interface ComponentSkeletonText {
    }
    interface ComponentSlides {
    }
    interface ComponentSpinner {
    }
    interface ComponentTabs {
    }
    interface ComponentTabsGames {
    }
    interface ComponentTabsMovies {
    }
    interface ComponentTabsMusic {
    }
    interface ComponentText {
    }
    interface ComponentThumbnail {
    }
    interface ComponentToast {
    }
    interface ComponentToggle {
    }
    interface ComponentToolbar {
    }
    interface PopoverExamplePage {
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLComponent_template_Element extends Components.Component_template_, HTMLStencilElement {
    }
    var HTMLComponent_template_Element: {
        prototype: HTMLComponent_template_Element;
        new (): HTMLComponent_template_Element;
    };
    interface HTMLComponentAccordionElement extends Components.ComponentAccordion, HTMLStencilElement {
    }
    var HTMLComponentAccordionElement: {
        prototype: HTMLComponentAccordionElement;
        new (): HTMLComponentAccordionElement;
    };
    interface HTMLComponentActionSheetElement extends Components.ComponentActionSheet, HTMLStencilElement {
    }
    var HTMLComponentActionSheetElement: {
        prototype: HTMLComponentActionSheetElement;
        new (): HTMLComponentActionSheetElement;
    };
    interface HTMLComponentAlertElement extends Components.ComponentAlert, HTMLStencilElement {
    }
    var HTMLComponentAlertElement: {
        prototype: HTMLComponentAlertElement;
        new (): HTMLComponentAlertElement;
    };
    interface HTMLComponentAvatarElement extends Components.ComponentAvatar, HTMLStencilElement {
    }
    var HTMLComponentAvatarElement: {
        prototype: HTMLComponentAvatarElement;
        new (): HTMLComponentAvatarElement;
    };
    interface HTMLComponentBadgeElement extends Components.ComponentBadge, HTMLStencilElement {
    }
    var HTMLComponentBadgeElement: {
        prototype: HTMLComponentBadgeElement;
        new (): HTMLComponentBadgeElement;
    };
    interface HTMLComponentBreadcrumbsElement extends Components.ComponentBreadcrumbs, HTMLStencilElement {
    }
    var HTMLComponentBreadcrumbsElement: {
        prototype: HTMLComponentBreadcrumbsElement;
        new (): HTMLComponentBreadcrumbsElement;
    };
    interface HTMLComponentButtonElement extends Components.ComponentButton, HTMLStencilElement {
    }
    var HTMLComponentButtonElement: {
        prototype: HTMLComponentButtonElement;
        new (): HTMLComponentButtonElement;
    };
    interface HTMLComponentCardElement extends Components.ComponentCard, HTMLStencilElement {
    }
    var HTMLComponentCardElement: {
        prototype: HTMLComponentCardElement;
        new (): HTMLComponentCardElement;
    };
    interface HTMLComponentCheckboxElement extends Components.ComponentCheckbox, HTMLStencilElement {
    }
    var HTMLComponentCheckboxElement: {
        prototype: HTMLComponentCheckboxElement;
        new (): HTMLComponentCheckboxElement;
    };
    interface HTMLComponentChipElement extends Components.ComponentChip, HTMLStencilElement {
    }
    var HTMLComponentChipElement: {
        prototype: HTMLComponentChipElement;
        new (): HTMLComponentChipElement;
    };
    interface HTMLComponentContentElement extends Components.ComponentContent, HTMLStencilElement {
    }
    var HTMLComponentContentElement: {
        prototype: HTMLComponentContentElement;
        new (): HTMLComponentContentElement;
    };
    interface HTMLComponentDatetimeElement extends Components.ComponentDatetime, HTMLStencilElement {
    }
    var HTMLComponentDatetimeElement: {
        prototype: HTMLComponentDatetimeElement;
        new (): HTMLComponentDatetimeElement;
    };
    interface HTMLComponentDetailsElement extends Components.ComponentDetails, HTMLStencilElement {
    }
    var HTMLComponentDetailsElement: {
        prototype: HTMLComponentDetailsElement;
        new (): HTMLComponentDetailsElement;
    };
    interface HTMLComponentFabElement extends Components.ComponentFab, HTMLStencilElement {
    }
    var HTMLComponentFabElement: {
        prototype: HTMLComponentFabElement;
        new (): HTMLComponentFabElement;
    };
    interface HTMLComponentGridElement extends Components.ComponentGrid, HTMLStencilElement {
    }
    var HTMLComponentGridElement: {
        prototype: HTMLComponentGridElement;
        new (): HTMLComponentGridElement;
    };
    interface HTMLComponentIconsElement extends Components.ComponentIcons, HTMLStencilElement {
    }
    var HTMLComponentIconsElement: {
        prototype: HTMLComponentIconsElement;
        new (): HTMLComponentIconsElement;
    };
    interface HTMLComponentInfiniteScrollElement extends Components.ComponentInfiniteScroll, HTMLStencilElement {
    }
    var HTMLComponentInfiniteScrollElement: {
        prototype: HTMLComponentInfiniteScrollElement;
        new (): HTMLComponentInfiniteScrollElement;
    };
    interface HTMLComponentInputElement extends Components.ComponentInput, HTMLStencilElement {
    }
    var HTMLComponentInputElement: {
        prototype: HTMLComponentInputElement;
        new (): HTMLComponentInputElement;
    };
    interface HTMLComponentItemElement extends Components.ComponentItem, HTMLStencilElement {
    }
    var HTMLComponentItemElement: {
        prototype: HTMLComponentItemElement;
        new (): HTMLComponentItemElement;
    };
    interface HTMLComponentItemGroupElement extends Components.ComponentItemGroup, HTMLStencilElement {
    }
    var HTMLComponentItemGroupElement: {
        prototype: HTMLComponentItemGroupElement;
        new (): HTMLComponentItemGroupElement;
    };
    interface HTMLComponentListElement extends Components.ComponentList, HTMLStencilElement {
    }
    var HTMLComponentListElement: {
        prototype: HTMLComponentListElement;
        new (): HTMLComponentListElement;
    };
    interface HTMLComponentLoadingElement extends Components.ComponentLoading, HTMLStencilElement {
    }
    var HTMLComponentLoadingElement: {
        prototype: HTMLComponentLoadingElement;
        new (): HTMLComponentLoadingElement;
    };
    interface HTMLComponentMenuElement extends Components.ComponentMenu, HTMLStencilElement {
    }
    var HTMLComponentMenuElement: {
        prototype: HTMLComponentMenuElement;
        new (): HTMLComponentMenuElement;
    };
    interface HTMLComponentModalElement extends Components.ComponentModal, HTMLStencilElement {
    }
    var HTMLComponentModalElement: {
        prototype: HTMLComponentModalElement;
        new (): HTMLComponentModalElement;
    };
    interface HTMLComponentModalContentElement extends Components.ComponentModalContent, HTMLStencilElement {
    }
    var HTMLComponentModalContentElement: {
        prototype: HTMLComponentModalContentElement;
        new (): HTMLComponentModalContentElement;
    };
    interface HTMLComponentNavElement extends Components.ComponentNav, HTMLStencilElement {
    }
    var HTMLComponentNavElement: {
        prototype: HTMLComponentNavElement;
        new (): HTMLComponentNavElement;
    };
    interface HTMLComponentNoteElement extends Components.ComponentNote, HTMLStencilElement {
    }
    var HTMLComponentNoteElement: {
        prototype: HTMLComponentNoteElement;
        new (): HTMLComponentNoteElement;
    };
    interface HTMLComponentPickerElement extends Components.ComponentPicker, HTMLStencilElement {
    }
    var HTMLComponentPickerElement: {
        prototype: HTMLComponentPickerElement;
        new (): HTMLComponentPickerElement;
    };
    interface HTMLComponentPopoverElement extends Components.ComponentPopover, HTMLStencilElement {
    }
    var HTMLComponentPopoverElement: {
        prototype: HTMLComponentPopoverElement;
        new (): HTMLComponentPopoverElement;
    };
    interface HTMLComponentProgressElement extends Components.ComponentProgress, HTMLStencilElement {
    }
    var HTMLComponentProgressElement: {
        prototype: HTMLComponentProgressElement;
        new (): HTMLComponentProgressElement;
    };
    interface HTMLComponentRadioElement extends Components.ComponentRadio, HTMLStencilElement {
    }
    var HTMLComponentRadioElement: {
        prototype: HTMLComponentRadioElement;
        new (): HTMLComponentRadioElement;
    };
    interface HTMLComponentRangeElement extends Components.ComponentRange, HTMLStencilElement {
    }
    var HTMLComponentRangeElement: {
        prototype: HTMLComponentRangeElement;
        new (): HTMLComponentRangeElement;
    };
    interface HTMLComponentRefresherElement extends Components.ComponentRefresher, HTMLStencilElement {
    }
    var HTMLComponentRefresherElement: {
        prototype: HTMLComponentRefresherElement;
        new (): HTMLComponentRefresherElement;
    };
    interface HTMLComponentReorderElement extends Components.ComponentReorder, HTMLStencilElement {
    }
    var HTMLComponentReorderElement: {
        prototype: HTMLComponentReorderElement;
        new (): HTMLComponentReorderElement;
    };
    interface HTMLComponentSearchbarElement extends Components.ComponentSearchbar, HTMLStencilElement {
    }
    var HTMLComponentSearchbarElement: {
        prototype: HTMLComponentSearchbarElement;
        new (): HTMLComponentSearchbarElement;
    };
    interface HTMLComponentSegmentElement extends Components.ComponentSegment, HTMLStencilElement {
    }
    var HTMLComponentSegmentElement: {
        prototype: HTMLComponentSegmentElement;
        new (): HTMLComponentSegmentElement;
    };
    interface HTMLComponentSelectElement extends Components.ComponentSelect, HTMLStencilElement {
    }
    var HTMLComponentSelectElement: {
        prototype: HTMLComponentSelectElement;
        new (): HTMLComponentSelectElement;
    };
    interface HTMLComponentSkeletonTextElement extends Components.ComponentSkeletonText, HTMLStencilElement {
    }
    var HTMLComponentSkeletonTextElement: {
        prototype: HTMLComponentSkeletonTextElement;
        new (): HTMLComponentSkeletonTextElement;
    };
    interface HTMLComponentSlidesElement extends Components.ComponentSlides, HTMLStencilElement {
    }
    var HTMLComponentSlidesElement: {
        prototype: HTMLComponentSlidesElement;
        new (): HTMLComponentSlidesElement;
    };
    interface HTMLComponentSpinnerElement extends Components.ComponentSpinner, HTMLStencilElement {
    }
    var HTMLComponentSpinnerElement: {
        prototype: HTMLComponentSpinnerElement;
        new (): HTMLComponentSpinnerElement;
    };
    interface HTMLComponentTabsElement extends Components.ComponentTabs, HTMLStencilElement {
    }
    var HTMLComponentTabsElement: {
        prototype: HTMLComponentTabsElement;
        new (): HTMLComponentTabsElement;
    };
    interface HTMLComponentTabsGamesElement extends Components.ComponentTabsGames, HTMLStencilElement {
    }
    var HTMLComponentTabsGamesElement: {
        prototype: HTMLComponentTabsGamesElement;
        new (): HTMLComponentTabsGamesElement;
    };
    interface HTMLComponentTabsMoviesElement extends Components.ComponentTabsMovies, HTMLStencilElement {
    }
    var HTMLComponentTabsMoviesElement: {
        prototype: HTMLComponentTabsMoviesElement;
        new (): HTMLComponentTabsMoviesElement;
    };
    interface HTMLComponentTabsMusicElement extends Components.ComponentTabsMusic, HTMLStencilElement {
    }
    var HTMLComponentTabsMusicElement: {
        prototype: HTMLComponentTabsMusicElement;
        new (): HTMLComponentTabsMusicElement;
    };
    interface HTMLComponentTextElement extends Components.ComponentText, HTMLStencilElement {
    }
    var HTMLComponentTextElement: {
        prototype: HTMLComponentTextElement;
        new (): HTMLComponentTextElement;
    };
    interface HTMLComponentThumbnailElement extends Components.ComponentThumbnail, HTMLStencilElement {
    }
    var HTMLComponentThumbnailElement: {
        prototype: HTMLComponentThumbnailElement;
        new (): HTMLComponentThumbnailElement;
    };
    interface HTMLComponentToastElement extends Components.ComponentToast, HTMLStencilElement {
    }
    var HTMLComponentToastElement: {
        prototype: HTMLComponentToastElement;
        new (): HTMLComponentToastElement;
    };
    interface HTMLComponentToggleElement extends Components.ComponentToggle, HTMLStencilElement {
    }
    var HTMLComponentToggleElement: {
        prototype: HTMLComponentToggleElement;
        new (): HTMLComponentToggleElement;
    };
    interface HTMLComponentToolbarElement extends Components.ComponentToolbar, HTMLStencilElement {
    }
    var HTMLComponentToolbarElement: {
        prototype: HTMLComponentToolbarElement;
        new (): HTMLComponentToolbarElement;
    };
    interface HTMLPopoverExamplePageElement extends Components.PopoverExamplePage, HTMLStencilElement {
    }
    var HTMLPopoverExamplePageElement: {
        prototype: HTMLPopoverExamplePageElement;
        new (): HTMLPopoverExamplePageElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
        "component-_template_": HTMLComponent_template_Element;
        "component-accordion": HTMLComponentAccordionElement;
        "component-action-sheet": HTMLComponentActionSheetElement;
        "component-alert": HTMLComponentAlertElement;
        "component-avatar": HTMLComponentAvatarElement;
        "component-badge": HTMLComponentBadgeElement;
        "component-breadcrumbs": HTMLComponentBreadcrumbsElement;
        "component-button": HTMLComponentButtonElement;
        "component-card": HTMLComponentCardElement;
        "component-checkbox": HTMLComponentCheckboxElement;
        "component-chip": HTMLComponentChipElement;
        "component-content": HTMLComponentContentElement;
        "component-datetime": HTMLComponentDatetimeElement;
        "component-details": HTMLComponentDetailsElement;
        "component-fab": HTMLComponentFabElement;
        "component-grid": HTMLComponentGridElement;
        "component-icons": HTMLComponentIconsElement;
        "component-infinite-scroll": HTMLComponentInfiniteScrollElement;
        "component-input": HTMLComponentInputElement;
        "component-item": HTMLComponentItemElement;
        "component-item-group": HTMLComponentItemGroupElement;
        "component-list": HTMLComponentListElement;
        "component-loading": HTMLComponentLoadingElement;
        "component-menu": HTMLComponentMenuElement;
        "component-modal": HTMLComponentModalElement;
        "component-modal-content": HTMLComponentModalContentElement;
        "component-nav": HTMLComponentNavElement;
        "component-note": HTMLComponentNoteElement;
        "component-picker": HTMLComponentPickerElement;
        "component-popover": HTMLComponentPopoverElement;
        "component-progress": HTMLComponentProgressElement;
        "component-radio": HTMLComponentRadioElement;
        "component-range": HTMLComponentRangeElement;
        "component-refresher": HTMLComponentRefresherElement;
        "component-reorder": HTMLComponentReorderElement;
        "component-searchbar": HTMLComponentSearchbarElement;
        "component-segment": HTMLComponentSegmentElement;
        "component-select": HTMLComponentSelectElement;
        "component-skeleton-text": HTMLComponentSkeletonTextElement;
        "component-slides": HTMLComponentSlidesElement;
        "component-spinner": HTMLComponentSpinnerElement;
        "component-tabs": HTMLComponentTabsElement;
        "component-tabs-games": HTMLComponentTabsGamesElement;
        "component-tabs-movies": HTMLComponentTabsMoviesElement;
        "component-tabs-music": HTMLComponentTabsMusicElement;
        "component-text": HTMLComponentTextElement;
        "component-thumbnail": HTMLComponentThumbnailElement;
        "component-toast": HTMLComponentToastElement;
        "component-toggle": HTMLComponentToggleElement;
        "component-toolbar": HTMLComponentToolbarElement;
        "popover-example-page": HTMLPopoverExamplePageElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppRoot {
    }
    interface Component_template_ {
    }
    interface ComponentAccordion {
    }
    interface ComponentActionSheet {
    }
    interface ComponentAlert {
    }
    interface ComponentAvatar {
    }
    interface ComponentBadge {
    }
    interface ComponentBreadcrumbs {
    }
    interface ComponentButton {
    }
    interface ComponentCard {
    }
    interface ComponentCheckbox {
    }
    interface ComponentChip {
    }
    interface ComponentContent {
    }
    interface ComponentDatetime {
    }
    interface ComponentDetails {
        "description"?: string;
        "url"?: string;
    }
    interface ComponentFab {
    }
    interface ComponentGrid {
    }
    interface ComponentIcons {
    }
    interface ComponentInfiniteScroll {
    }
    interface ComponentInput {
    }
    interface ComponentItem {
    }
    interface ComponentItemGroup {
    }
    interface ComponentList {
    }
    interface ComponentLoading {
    }
    interface ComponentMenu {
    }
    interface ComponentModal {
    }
    interface ComponentModalContent {
    }
    interface ComponentNav {
    }
    interface ComponentNote {
    }
    interface ComponentPicker {
    }
    interface ComponentPopover {
    }
    interface ComponentProgress {
    }
    interface ComponentRadio {
    }
    interface ComponentRange {
    }
    interface ComponentRefresher {
    }
    interface ComponentReorder {
    }
    interface ComponentSearchbar {
    }
    interface ComponentSegment {
    }
    interface ComponentSelect {
    }
    interface ComponentSkeletonText {
    }
    interface ComponentSlides {
    }
    interface ComponentSpinner {
    }
    interface ComponentTabs {
    }
    interface ComponentTabsGames {
    }
    interface ComponentTabsMovies {
    }
    interface ComponentTabsMusic {
    }
    interface ComponentText {
    }
    interface ComponentThumbnail {
    }
    interface ComponentToast {
    }
    interface ComponentToggle {
    }
    interface ComponentToolbar {
    }
    interface PopoverExamplePage {
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-root": AppRoot;
        "component-_template_": Component_template_;
        "component-accordion": ComponentAccordion;
        "component-action-sheet": ComponentActionSheet;
        "component-alert": ComponentAlert;
        "component-avatar": ComponentAvatar;
        "component-badge": ComponentBadge;
        "component-breadcrumbs": ComponentBreadcrumbs;
        "component-button": ComponentButton;
        "component-card": ComponentCard;
        "component-checkbox": ComponentCheckbox;
        "component-chip": ComponentChip;
        "component-content": ComponentContent;
        "component-datetime": ComponentDatetime;
        "component-details": ComponentDetails;
        "component-fab": ComponentFab;
        "component-grid": ComponentGrid;
        "component-icons": ComponentIcons;
        "component-infinite-scroll": ComponentInfiniteScroll;
        "component-input": ComponentInput;
        "component-item": ComponentItem;
        "component-item-group": ComponentItemGroup;
        "component-list": ComponentList;
        "component-loading": ComponentLoading;
        "component-menu": ComponentMenu;
        "component-modal": ComponentModal;
        "component-modal-content": ComponentModalContent;
        "component-nav": ComponentNav;
        "component-note": ComponentNote;
        "component-picker": ComponentPicker;
        "component-popover": ComponentPopover;
        "component-progress": ComponentProgress;
        "component-radio": ComponentRadio;
        "component-range": ComponentRange;
        "component-refresher": ComponentRefresher;
        "component-reorder": ComponentReorder;
        "component-searchbar": ComponentSearchbar;
        "component-segment": ComponentSegment;
        "component-select": ComponentSelect;
        "component-skeleton-text": ComponentSkeletonText;
        "component-slides": ComponentSlides;
        "component-spinner": ComponentSpinner;
        "component-tabs": ComponentTabs;
        "component-tabs-games": ComponentTabsGames;
        "component-tabs-movies": ComponentTabsMovies;
        "component-tabs-music": ComponentTabsMusic;
        "component-text": ComponentText;
        "component-thumbnail": ComponentThumbnail;
        "component-toast": ComponentToast;
        "component-toggle": ComponentToggle;
        "component-toolbar": ComponentToolbar;
        "popover-example-page": PopoverExamplePage;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "component-_template_": LocalJSX.Component_template_ & JSXBase.HTMLAttributes<HTMLComponent_template_Element>;
            "component-accordion": LocalJSX.ComponentAccordion & JSXBase.HTMLAttributes<HTMLComponentAccordionElement>;
            "component-action-sheet": LocalJSX.ComponentActionSheet & JSXBase.HTMLAttributes<HTMLComponentActionSheetElement>;
            "component-alert": LocalJSX.ComponentAlert & JSXBase.HTMLAttributes<HTMLComponentAlertElement>;
            "component-avatar": LocalJSX.ComponentAvatar & JSXBase.HTMLAttributes<HTMLComponentAvatarElement>;
            "component-badge": LocalJSX.ComponentBadge & JSXBase.HTMLAttributes<HTMLComponentBadgeElement>;
            "component-breadcrumbs": LocalJSX.ComponentBreadcrumbs & JSXBase.HTMLAttributes<HTMLComponentBreadcrumbsElement>;
            "component-button": LocalJSX.ComponentButton & JSXBase.HTMLAttributes<HTMLComponentButtonElement>;
            "component-card": LocalJSX.ComponentCard & JSXBase.HTMLAttributes<HTMLComponentCardElement>;
            "component-checkbox": LocalJSX.ComponentCheckbox & JSXBase.HTMLAttributes<HTMLComponentCheckboxElement>;
            "component-chip": LocalJSX.ComponentChip & JSXBase.HTMLAttributes<HTMLComponentChipElement>;
            "component-content": LocalJSX.ComponentContent & JSXBase.HTMLAttributes<HTMLComponentContentElement>;
            "component-datetime": LocalJSX.ComponentDatetime & JSXBase.HTMLAttributes<HTMLComponentDatetimeElement>;
            "component-details": LocalJSX.ComponentDetails & JSXBase.HTMLAttributes<HTMLComponentDetailsElement>;
            "component-fab": LocalJSX.ComponentFab & JSXBase.HTMLAttributes<HTMLComponentFabElement>;
            "component-grid": LocalJSX.ComponentGrid & JSXBase.HTMLAttributes<HTMLComponentGridElement>;
            "component-icons": LocalJSX.ComponentIcons & JSXBase.HTMLAttributes<HTMLComponentIconsElement>;
            "component-infinite-scroll": LocalJSX.ComponentInfiniteScroll & JSXBase.HTMLAttributes<HTMLComponentInfiniteScrollElement>;
            "component-input": LocalJSX.ComponentInput & JSXBase.HTMLAttributes<HTMLComponentInputElement>;
            "component-item": LocalJSX.ComponentItem & JSXBase.HTMLAttributes<HTMLComponentItemElement>;
            "component-item-group": LocalJSX.ComponentItemGroup & JSXBase.HTMLAttributes<HTMLComponentItemGroupElement>;
            "component-list": LocalJSX.ComponentList & JSXBase.HTMLAttributes<HTMLComponentListElement>;
            "component-loading": LocalJSX.ComponentLoading & JSXBase.HTMLAttributes<HTMLComponentLoadingElement>;
            "component-menu": LocalJSX.ComponentMenu & JSXBase.HTMLAttributes<HTMLComponentMenuElement>;
            "component-modal": LocalJSX.ComponentModal & JSXBase.HTMLAttributes<HTMLComponentModalElement>;
            "component-modal-content": LocalJSX.ComponentModalContent & JSXBase.HTMLAttributes<HTMLComponentModalContentElement>;
            "component-nav": LocalJSX.ComponentNav & JSXBase.HTMLAttributes<HTMLComponentNavElement>;
            "component-note": LocalJSX.ComponentNote & JSXBase.HTMLAttributes<HTMLComponentNoteElement>;
            "component-picker": LocalJSX.ComponentPicker & JSXBase.HTMLAttributes<HTMLComponentPickerElement>;
            "component-popover": LocalJSX.ComponentPopover & JSXBase.HTMLAttributes<HTMLComponentPopoverElement>;
            "component-progress": LocalJSX.ComponentProgress & JSXBase.HTMLAttributes<HTMLComponentProgressElement>;
            "component-radio": LocalJSX.ComponentRadio & JSXBase.HTMLAttributes<HTMLComponentRadioElement>;
            "component-range": LocalJSX.ComponentRange & JSXBase.HTMLAttributes<HTMLComponentRangeElement>;
            "component-refresher": LocalJSX.ComponentRefresher & JSXBase.HTMLAttributes<HTMLComponentRefresherElement>;
            "component-reorder": LocalJSX.ComponentReorder & JSXBase.HTMLAttributes<HTMLComponentReorderElement>;
            "component-searchbar": LocalJSX.ComponentSearchbar & JSXBase.HTMLAttributes<HTMLComponentSearchbarElement>;
            "component-segment": LocalJSX.ComponentSegment & JSXBase.HTMLAttributes<HTMLComponentSegmentElement>;
            "component-select": LocalJSX.ComponentSelect & JSXBase.HTMLAttributes<HTMLComponentSelectElement>;
            "component-skeleton-text": LocalJSX.ComponentSkeletonText & JSXBase.HTMLAttributes<HTMLComponentSkeletonTextElement>;
            "component-slides": LocalJSX.ComponentSlides & JSXBase.HTMLAttributes<HTMLComponentSlidesElement>;
            "component-spinner": LocalJSX.ComponentSpinner & JSXBase.HTMLAttributes<HTMLComponentSpinnerElement>;
            "component-tabs": LocalJSX.ComponentTabs & JSXBase.HTMLAttributes<HTMLComponentTabsElement>;
            "component-tabs-games": LocalJSX.ComponentTabsGames & JSXBase.HTMLAttributes<HTMLComponentTabsGamesElement>;
            "component-tabs-movies": LocalJSX.ComponentTabsMovies & JSXBase.HTMLAttributes<HTMLComponentTabsMoviesElement>;
            "component-tabs-music": LocalJSX.ComponentTabsMusic & JSXBase.HTMLAttributes<HTMLComponentTabsMusicElement>;
            "component-text": LocalJSX.ComponentText & JSXBase.HTMLAttributes<HTMLComponentTextElement>;
            "component-thumbnail": LocalJSX.ComponentThumbnail & JSXBase.HTMLAttributes<HTMLComponentThumbnailElement>;
            "component-toast": LocalJSX.ComponentToast & JSXBase.HTMLAttributes<HTMLComponentToastElement>;
            "component-toggle": LocalJSX.ComponentToggle & JSXBase.HTMLAttributes<HTMLComponentToggleElement>;
            "component-toolbar": LocalJSX.ComponentToolbar & JSXBase.HTMLAttributes<HTMLComponentToolbarElement>;
            "popover-example-page": LocalJSX.PopoverExamplePage & JSXBase.HTMLAttributes<HTMLPopoverExamplePageElement>;
        }
    }
}
